package homeWork.hw8;

import utils.Utilities;

import java.util.Arrays;


public class HW8 {


    public static void main(String[] args) {
// 1.
        Utilities.taskNumber();
// 2.
        Utilities.taskNumber();
// 3.
        Utilities.taskNumber();
// 4.
        Utilities.taskNumber();
// 5. Создать объекты типа Integer, Double, String и присвоить им такие же
// значения, как и переменным класса HW8_1
        Utilities.partNumber();
        Utilities.taskNumber();

        Integer i_1 = new Integer(1);
        Double d_1 = new Double(1);
        String sun_1 = new String("Sun");

//6. Сравнить переменные соответствующих типов из классов HW8_1 и HW8 и
// распечатать результат сравнения в виде таблички:
        Utilities.taskNumber();

        System.out.println(i_1.equals(HW8_1.i_1_1));
        System.out.println(d_1.equals(HW8_1.d_1_1));
        System.out.println(sun_1.equals(HW8_1.sun_1_1));
//7. Написать метод, который принимает на вход 5 целых чисел,  и возвращает
// массив из этих же чисел
        Utilities.taskNumber();

        System.out.println(Arrays.toString
                (Utilities.fiveInComeInt(5, 5, 7, 3, 2)));

//8. Написать метод, который принимает на вход 5 чисел типа double,  и возвращает
// массив из этих же чисел
        Utilities.taskNumber();

        System.out.println(Arrays.toString
                (Utilities.fiveInComeDouble(5, 5, 7, 3, 2)));

//9. Написать метод, который принимает на вход 5 слов, и возвращает массив из этих слов
        Utilities.taskNumber();

        System.out.println(Arrays.toString
                (Utilities.fiveInComeString("Bob", "Sam", "Bill", "John", "Nick")));

//10. Написать метод, который принимает на вход 5 слов, и возвращает массив из этих слов
        Utilities.taskNumber();

//11. Написать метод, который принимает на вход массив целых положительных чисел,
// и возвращает количество четных чисел в этом массиве
        Utilities.taskNumber();

//12. Написать метод, который принимает на вход массив целых положительных чисел,
// и возвращает массив нечетных чисел
        Utilities.taskNumber();

//13. Написать метод, который принимает на вход массив целых чисел,  и возвращает
// массив значений true или false, если числа больше 10
        Utilities.partNumber();
        Utilities.taskNumber();

//14. Написать метод, который принимает на вход массив слов,  и возвращает строку,
// состоящую из этих слов
        Utilities.taskNumber();

//15. Написать метод, который принимает массив целых чисел и считает сумму чисел
// во второй половине массива
        Utilities.taskNumber();

//16. Написать метод, который принимает на вход целое положительные число в пределах
// от 1 до 10 исключительно, и возвращает таблицу умножения на это число в виде массива
//Например, метод(2) -> {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
        Utilities.taskNumber();

//17. Написать метод, который принимает массив целых чисел и возвращает массив
// четных чисел, если четных чисел больше, или массив нечетных чисел, если нечетных
// чисел больше.
        Utilities.taskNumber();

//18. Написать метод, который принимает на вход длину массива и генерирует массив
// случайных положительных чисел от 0 до 100 исключительно.
        Utilities.taskNumber();

//19. Написать метод, который принимает на вход длину массива l и количество
// знаков d (однозначные, двузначные, трехзначные и тд числа), и генерирует
// массив случайных целых положительных чисел длины l, в котором все числа
// имеют количество знаков d
        Utilities.taskNumber();

//20. Написать метод, который принимает на вход массив целых положительных чисел,
// и возвращает массив только двузначных чисел. ПРоверить работу метода на массиве
// из задания 18.
        Utilities.taskNumber();

//21. Написать метод, который принимает на вход массив целых положительных двузначных
// чисел, и возвращает массив разниц между десятками и единицами
        Utilities.taskNumber();

//22. Написать метод, который принимает массив из 11 целых положительных чисел от 0 до 9,
// и возвращает массив, который содержит номер телефона, состоящий из этих чисел,
// и название страны, которой номер принадлежит.
//Например: method({1, 8, 0, 0, 1, 2, 3, 4, 5, 6, 7}) -> {“1(800)123-45-67”, “USA”}
        Utilities.partNumber();
        Utilities.taskNumber();

//23. Написать метод, который принимает массив целых положительных чисел больше 0,
// и возвращает массив уникальных чисел.
        Utilities.taskNumber();

//24. Написать метод, который принимает на вход массив целых положительных чисел,
// и возвращает количество уникальных и неуникальных элементов в этом массиве
        Utilities.taskNumber();

//25. Написать метод, который принимает на вход массив целых положительных чисел,
// и 2 целых положительных числа (значения индексов). Метод возвращает массив,
// который содержит только числа из первого массива в промежутке между индексами.
//Например: method({1, 2, 3, 4, 5}, 1, 3) -> {2, 3, 4}
        Utilities.taskNumber();

//26. Написать метод, который принимает на вход 2 массива int[] и возвращает
// объединенный массив уникальных неповторяющихся элементов
        Utilities.taskNumber();
    }
}
